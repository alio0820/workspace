0.
XML Configuration for View Parameters:
<navigation-rule> 
  <from-view-id>whatever the from view id is </from-view-id> 
  <navigation-case> 
    <from-outcome> whatever the outcome value is</from-outcome> 
    <to-view-id>whatever the to view id is</to-view-id>  
    <redirect> 
      ...the view-param elements are optional 
      <view-param>  
        <name>any string is fine here </name> 
        <value>any string or value expression is fine here </value>  
      </view-param> 
      ...additional view-param elements may be defined 
    </redirect> 
  </navigation-case> 
</navigation-rule>

1.国际化
	<f:loadBundle var="msgs" basename="message" />  读取系统默认语言资源文件
	<f:view locale= "en_US"> 可以指定国际化资源文件 
	 您也可以在faces-config.xml 中设定语系，例如： 
	<faces-config> 
		<application> 
			<locale-config>
				< default-locale>zh_CN</default-locale> 
				<supported-locale>en</supported-locale> 支持的语言环境
			</locale-config>
		</application> 
	 ..... 
	 </faces-config> 
	 
	2. 在web.xml中配置FacesServlet核心控制器：
FacesServlet也是一个Servlet，在web.xml的配置和普通的Servlet配置没有什么区别：
<!-- JSF的核心控制器 FacesServlet -->
    <servlet>
        <servlet-name>FacesServlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    </servlet>
    <!-- Faces Servlet Mapping -->
    <servlet-mapping>
        <servlet-name>FacesServlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>这里设置了拦截.jsf结尾的请求。

需要为JSF配置一些额外的参数，可以在web.xml中使用<context-param>元素进行配置。下面是常用的一些配置：
javax.faces.STATE_SAVING_METHOD
指示是在客户端（client）还是在服务器端（server）保存UI组件的状态和 
session信息, server表示保存到服务器端,client表示保存到客户端, 
 <context-param>
  <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
  <param-value>server</param-value>
 </context-param>

<!-- JSF采用 xhtml 前缀，定义这个参数让Facelet渲染器能够解释这个前缀 -->
默认为.jsp，它自于javax.faces.application.ViewHandler 
类中的常量. 常量的名字是 DEFAULT_SUFFIX 值相当于 ".jsp"
    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>

    <!-- 指定JSF所管理的生命周期实例的标识符 -->
默认jsf的生命周期
 <context-param>
  <param-name>javax.faces.LIFECYCLE_ID</param-name>
  <param-value>JSF</param-value>
 </context-param>

JSF将在装载WEB-INF/faces-config.xml之前载入这些资源 
 <context-param>
  <param-name>javax.faces.CONFIG_FILES</param-name>
  <param-value>
   /WEB-INF/faces-config-sys.xml,/WEB-INF/faces-config-hr.xml,/WEB-INF/faces-config-mrp.xml
  </param-value>
 </context-param>

设置自定义的Facelets标签库文件路径 
 <context-param>
  <param-name>facelets.LIBRARIES</param-name>
  <param-value>/WEB-INF/tags/ejs.taglib.xml</param-value>
 </context-param>
 
告诉JSF验证其可以创建应用对象(组件，呈现器，转换器等)， 
那么设置标志为true， 默认值为false
<!-- DEVELOPMENT设置为false，在正式环境才需要设置为true -->
    <context-param>
        <param-name>javax.faces.verifyObjects</param-name>
        <param-value>true</param-value>
    </context-param>

告诉JSF根据DTD验证配置文件，那么设置标志为true， 默认值为false
    <context-param>
        <param-name>javax.faces.validateXml</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- 当设置在服务器端保存状态时，控制session保存的视图数量，-1表示没有限制 -->
    <context-param>        <param-name>javax.faces.NUMBER_OF_VIEWS_IN_SESSION</param-name>
        <param-value>-1</param-value>
    </context-param>
JSF的配置文件faces-config.xml
其他的配置元素：
应用管理相关配置：
<application>：用于管理JSF应用相关配置
<referenced-bean>：配置被引用Bean
注册自定义组件的相关配置：
<converter>：注册自定义转换器
<validator>：注册自定义输入校验器
<component>：注册自定义组件
<render-kit>：注册自定义组件绘制器和绘制器包
高级扩展配置：
<phase-listener>：注册生命周期监听器
<factory>：配置实例化JSF核心类的工厂
