<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0056)http://blog.csdn.net/shirley0214/article/details/6945002 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET</title>

<meta name="description" content="调用plot函数的方法如下：var plot = $.plot(placeholder, data, options)其中placeholder可以是JQuery的对象，DOM元素或者JQuery的表达示，要把完成的图放到这个位置上。placeholder要有宽度和高度。因为plot会修改placeholder的一些属性，所以建议大家使用一个简单的div，除了高度和宽度其它的属性都不要">
<script type="text/javascript" async="" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ga.js"></script><script src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/jquery.js" type="text/javascript"></script>
<script src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/plugins.js" type="text/javascript"></script>
<script src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/common.js" type="text/javascript"></script>
<link rel="Stylesheet" type="text/css" href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/style.css">
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/shirley0214/rss/list">
<link rel="shortcut icon" href="http://blog.csdn.net/favicon.ico">
<link type="text/css" rel="stylesheet" href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/default.css">
</head>
<body>
<script src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/pub_topnav_2011.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/navtop_2011.css">
<div class="nav_top_2011">
<p>欢迎<em>runtool</em>我的：<a href="http://download.csdn.net/my" class="red">资源</a><a href="http://writeblog.csdn.net/" class="red">博客</a><a href="http://hi.csdn.net/my.html">空间</a><a href="http://my.csdn.net/resume">简历</a><a href="http://passport.csdn.net/account/profile">设置</a>|<a href="http://passport.csdn.net/help/faq">帮助</a>|<a href="http://passport.csdn.net/account/logout">退出</a></p><ul>
<li><a href="http://www.csdn.net/" target="_blank">CSDN首页</a></li>
<li><a href="http://news.csdn.net/" target="_blank">资讯</a></li>
<li><a href="http://bbs.csdn.net/" target="_blank">论坛</a></li>
<li><a href="http://blog.csdn.net/" target="_blank">博客</a></li>
<li><a href="http://download.csdn.net/" target="_blank">下载</a></li>
<li><a href="http://so.csdn.net/" target="_blank">搜索</a></li>
<li class="more"><h2 id="topnav_btnmore"><a href="javascript:void(0);">更多</a></h2>
<ul id="topnav_hidlist">
<li><a href="http://cto.csdn.net/" target="_blank">CTO俱乐部</a></li>
<li><a href="http://student.csdn.net/" target="_blank">学生大本营</a></li>
<li><a href="http://edu.csdn.net/" target="_blank">培训充电</a></li>
<li><a href="http://mobile.csdn.net/" target="_blank">移动开发</a></li>
<li><a href="http://sd.csdn.net/" target="_blank">软件研发</a></li>
<li><a href="http://cloud.csdn.net/" target="_blank">云计算</a></li>
<li><a href="http://www.programmer.com.cn/" target="_blank">程序员</a></li>
<li><a href="http://tup.csdn.net/" target="_blank">TUP</a></li>
</ul>
</li>
</ul>
</div>


<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1>
                <a href="http://blog.csdn.net/shirley0214">shirley0214的专栏</a></h1>
            <h2></h2>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
            <!--<li id="btnHome"><a href="/shirley0214"><span><img src="http://static.blog.csdn.net/images/ico_home.gif">我的首页</span></a></li>-->
            <li id="btnContents"><a href="http://blog.csdn.net/shirley0214?viewmode=contents"><span><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/shirley0214?viewmode=list"><span><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/shirley0214/rss/list"><span><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "shirley0214";
    var blog_address = "http://blog.csdn.net/shirley0214";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = $.cookie("UserName");
</script>
        
<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 
<a href="http://blog.csdn.net/blogdevteam/article/details/7161925" target="_blank"><font color="red">2012年4月微软MVP申请开始！</font></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://ad.doubleclick.net/click;h=v2%7C3E84%7C0%7C0%7C%2a%7Cb;247908458;0-0;0;73605427;31-1%7C1;44759227%7C44777015%7C1;;%3fhttp://www.ithaowai.com/cloud?utm_source=CSDN&utm_medium=CSDN_HomePage_news_picture_g01&utm_campaign=CN2011Q4BIZ_Xeon_IT_Center_Promotion" target="_blank"><font color="red">点击了解英特尔云计算 </font></a>
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://blog.csdn.net/blogdevteam/article/details/7177569" target="_blank"><font color="red">2012年1月当选微软MVP的CSDN会员名单揭晓！</font></a>
</div><script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ad.js"></script>

<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Repost"></span>
    <h3>
        <span class="link_title"><a href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET.htm" title="flot 说明文档-翻译">flot 说明文档-翻译</a></span>
        
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/shirley0214/article/category/924804">web 前端 jQuery Flot控件</a> 
        </span>
    <span class="link_postdate">2011-11-07 19:43</span>
    <span class="link_view" title="阅读次数">59人阅读</span>
    <span class="link_comments" title="评论次数"><a href="http://blog.csdn.net/shirley0214/article/details/6945002#comments">评论</a>(0)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle(&#39;flot 说明文档-翻译&#39;,&#39;6945002&#39;);return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="http://blog.csdn.net/shirley0214/article/details/6945002#report" onclick="javascript:report(6945002,2);return false;" title="举报">举报</a></span>
    
</div>

    
<div id="article_content" class="article_content">
    
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
调用plot函数的方法如下：<br>
var plot = $.plot(placeholder, data, options)<br>
<br>
其中placeholder可以是JQuery的对象，DOM元素或者JQuery的表达示，要把完成的图放到这个位置上。placeholder要有宽度和高度。因为plot会修改placeholder的一些属性，所以建议大家使用一个简单的div，除了高度和宽度其它的属性都不要设置。<br>
<br>
Data的结构：<br>
data应该是data series的一个数组：<br>
[ series1, series2, ... ]<br>
一个series可以是原始数据或者是拥有属性的对象。原始数据是一个二维数组：<br>
[ [x1, y1], [x2, y2], ... ]<br>
为了简化flot内容的逻辑关系，x轴和y轴的数值都要使用数字（当然，如果有特殊需要的话，flot也可以支持以时间一个轴，后面会有详细的说明）。因为大多数的情况下，我们都是从数据库中直接提取数据并转换成JSON格式，但是没有关心过数据类型的问题。如果出现了奇怪的现象的话，请先检查数据的格式是否有问题。<br>
如果在一个点的数据使用的是null的话，那么在绘制的过程中就会把这个点忽略。那么包含这个点的那条线就会有断开的现象。这个点之前和之后的点是无法进行连接的。<br>
<br>
线和点是相关连的。对于bars， 可以设置第三个关联值（默认是0）。<br>
一个单一的序列对象结构是：<br>
&nbsp; {<br>
&nbsp;&nbsp;&nbsp; color: color or number<br>
&nbsp;&nbsp;&nbsp; data: rawdata<br>
&nbsp;&nbsp;&nbsp; label: string<br>
&nbsp;&nbsp;&nbsp; lines: specific lines options<br>
&nbsp;&nbsp;&nbsp; bars: specific bars options<br>
&nbsp;&nbsp;&nbsp; points: specific points options<br>
&nbsp;&nbsp;&nbsp; xaxis: 1 or 2<br>
&nbsp;&nbsp;&nbsp; yaxis: 1 or 2<br>
&nbsp;&nbsp;&nbsp; clickable: boolean<br>
&nbsp;&nbsp;&nbsp; hoverable: boolean<br>
&nbsp;&nbsp;&nbsp; shadowSize: number<br>
&nbsp; }<br>
除了其中的data以外，其它的属性都没有必要明确的指定，因为大多数情况下它们都是使用默认值的。通常你只指定标签和数据：<br>
&nbsp; {<br>
&nbsp;&nbsp;&nbsp; label: "y = 3",<br>
&nbsp;&nbsp;&nbsp; data: [[0, 3], [10, 3]]<br>
&nbsp; }<br>
<br>
&nbsp; label是说明这一个数据序列的含义的，如果只有一个序列的话就没有必要设置这个属性。如果有多个序列，就要设置label，从而可以在图中区分出序列的含义。<br>
&nbsp; 如果不设置color，那么会自动生成color来进行显示。<br>
&nbsp; 如果你想让用户添加和删除数据序列的话，剩下的属性就非常有用了。<br>
&nbsp; xaxis和yaxis选项设置使用哪个维度，默认是设置成1的，如果设置成2的话，就使用第二个维度（x轴在上面，y轴在右边）。<br>
&nbsp;&nbsp;<br>
&nbsp; clickable和hoverable可以设置成false，当整个图表设置成可交互时，这个选项可以让这条特定的数据序列让用户无法交互。<br>
&nbsp;&nbsp;<br>
没有说明的属性会在后面详细介绍，大多数情况话都是使用默认值。当你要使用自己定义的值时，就会把默认的值给覆盖。<br>
<br>
这是一个比较复杂的数据序列定义：<br>
[ { label: "Foo", data: [ [10, 1], [17, -14], [30, 5] ] },<br>
&nbsp;&nbsp;&nbsp; { label: "Bar", data: [ [11, 13], [19, 11], [30, -7] ] } ]<br>
<br>
Options的含义：<br>
所有的选项都是完全可选的。如果想要修改的话，把它当作一个对象来处理就可以了：<br>
var options = {<br>
&nbsp;&nbsp;&nbsp; series: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lines: { show: true },<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; points: { show: true }<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; };<br>
<br>
&nbsp;&nbsp;<br>
可定制说明部分的用户设置：</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
========================<br>
legend: {<br>
&nbsp;&nbsp;&nbsp; show: boolean<br>
&nbsp;&nbsp;&nbsp; labelFormatter: null or (fn: string, series object -&gt; string)<br>
&nbsp;&nbsp;&nbsp; labelBoxBorderColor: color<br>
&nbsp;&nbsp;&nbsp; noColumns: number<br>
&nbsp;&nbsp;&nbsp; position: "ne" or "nw" or "se" or "sw"<br>
&nbsp;&nbsp;&nbsp; margin: number of pixels or [x margin, y margin]<br>
&nbsp;&nbsp;&nbsp; backgroundColor: null or color<br>
&nbsp;&nbsp;&nbsp; backgroundOpacity: number between 0 and 1<br>
&nbsp;&nbsp;&nbsp; container: null or jQuery object/DOM element/jQuery expression<br>
&nbsp; }<br>
<br>
说明可以看成是一个表格，由两部分组成的：一个是所有数据序列的label，另一个是颜色。如果想让label以其它的格式显示的话，可以使用lavelFormatter这个函数：<br>
</p>
<div class="dp-highlighter bg_javascript" style="font-family:Consolas,&#39;Courier New&#39;,Courier,mono,serif; background-color:rgb(231,229,220); width:687px; overflow-x:auto; overflow-y:auto; margin-top:18px!important; margin-right:0px!important; margin-bottom:18px!important; margin-left:0px!important; padding-top:1px">
<div class="bar" style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important; padding-left:45px">
<div class="tools" style="padding-top:3px; padding-right:8px; padding-left:10px; font:normal normal normal 9px/normal Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; background-color:rgb(248,248,248); padding-bottom:10px; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108)">
<a href="http://blog.csdn.net/xuqing3344520/article/details/5831726#" class="ViewSource" title="view plain" style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important; color:rgb(160,160,160); text-decoration:none; background-color:inherit; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; padding-top:1px; padding-right:1px; padding-bottom:1px; padding-left:1px; margin-top:0px; margin-right:10px; margin-bottom:0px; margin-left:0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px">view
 plain</a></div>
</div>
<ol start="1" class="dp-c" style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:1px!important; margin-left:45px!important; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; list-style-position:initial; background-color:rgb(255,255,255); color:rgb(92,92,92)">
<li class="alt" style="margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; margin-left:0px!important; padding-top:0px!important; padding-right:3px!important; padding-bottom:0px!important; padding-left:10px!important; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:solid; border-width:initial; border-color:initial; list-style-type:decimal-leading-zero; list-style-position:outside!important; border-left-width:3px; border-left-color:rgb(108,226,108); color:inherit; line-height:18px">
<span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:black; background-color:inherit"><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">labelFormatter:&nbsp;</span><span class="keyword" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:rgb(0,102,153); background-color:inherit; font-weight:bold">function</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">(label,&nbsp;series)&nbsp;{&nbsp;&nbsp;</span></span></li><li style="margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; margin-left:0px!important; padding-top:0px!important; padding-right:3px!important; padding-bottom:0px!important; padding-left:10px!important; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:solid; border-width:initial; border-color:initial; list-style-type:decimal-leading-zero; list-style-position:outside!important; border-left-width:3px; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px">
<span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:black; background-color:inherit">&nbsp;&nbsp;<span class="comment" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:rgb(0,130,0); background-color:inherit">//&nbsp;series&nbsp;is&nbsp;the&nbsp;series&nbsp;object&nbsp;for&nbsp;the&nbsp;label</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; margin-left:0px!important; padding-top:0px!important; padding-right:3px!important; padding-bottom:0px!important; padding-left:10px!important; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:solid; border-width:initial; border-color:initial; list-style-type:decimal-leading-zero; list-style-position:outside!important; border-left-width:3px; border-left-color:rgb(108,226,108); color:inherit; line-height:18px">
<span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:black; background-color:inherit">&nbsp;&nbsp;<span class="keyword" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:rgb(0,102,153); background-color:inherit; font-weight:bold">return</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">&nbsp;</span><span class="string" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:blue; background-color:inherit">'&lt;a&nbsp;href="#'</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">&nbsp;+&nbsp;label&nbsp;+&nbsp;</span><span class="string" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:blue; background-color:inherit">'"&nbsp;mce_href="#'</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">&nbsp;+&nbsp;label&nbsp;+&nbsp;</span><span class="string" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:blue; background-color:inherit">'"&gt;'</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">&nbsp;+&nbsp;label&nbsp;+&nbsp;</span><span class="string" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:blue; background-color:inherit">'&lt;/a&gt;'</span><span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; background-color:inherit">;&nbsp;&nbsp;</span></span></li><li style="margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; margin-left:0px!important; padding-top:0px!important; padding-right:3px!important; padding-bottom:0px!important; padding-left:10px!important; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:solid; border-width:initial; border-color:initial; list-style-type:decimal-leading-zero; list-style-position:outside!important; border-left-width:3px; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248); line-height:18px">
<span style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-width:initial; border-color:initial; color:black; background-color:inherit">}&nbsp;&nbsp;</span></li></ol>
</div>
<br style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important">
noColums是要把这个说明部分划分成几列。position是要把这个说明放到图表的哪个位置(top-right, top-left, 等等)以及与其它图表之间的距离。backgroundColor和backgroundOpacity是设置背景的颜色和透明度，正常都是默认的。<br style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important">
<br style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important">
如果你想把这个说明部分从图表中拿到来，并放到DOM中的一个元素中的话，就可以设置container这个属性，它可以是一个JQuery的对象或者表达式。psition和margin等等的一些属性就会被忽略，而且这个元素中的内容会被重写的。<br style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important">
<br style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important">
关于轴的用户设置：
<p></p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
========================</p>
<pre style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif!important; word-wrap:break-word; white-space:normal; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">xaxis, yaxis: { show: null or true/false position: "bottom" or "top" or "left" or "right" mode: null or "time" color: null or color spec tickColor: null or color spec min: null or number max: null or number autoscaleMargin: null or number transform: null or fn: number -&gt; number inverseTransform: null or fn: number -&gt; number ticks: null or number or ticks array or (fn: range -&gt; ticks array) tickSize: number or array minTickSize: number or array tickFormatter: (fn: number, object -&gt; string) or string tickDecimals: null or number labelWidth: null or number labelHeight: null or number reserveSpace: null or true tickLength: null or number alignTicksWithAxis: null or number }</pre>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
<br>
<br>
&nbsp; 所有的都包含相同的属性。下面会详细的介绍每一个属性的含义。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
show：如果不设置这个属性的话，flot会自动的来选择，比如：数据与轴有关系的话，那么就会把轴显示出来，当然更灵活的方式还是用</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; true或者false来设定这个属性。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
position:用来定义轴文字显示的位置，是在X轴的上方还是下方，是在Y轴的左边还是右边。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
mode：轴的数据类型，默认的是数值类型，当设置成time类型的话，就可以用时间做为一个轴。<br>
color：定义轴标识文字和坐标的颜色。如果不设置的话，就与图表中网格的颜色是相同的。当然也可以自己来设置颜色，使用"tickColor"还</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 可以单独定义坐标的颜色。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
min/max：描述轴最大值和最小值范围。如果不设置的话，flot会自动的计算并生成一个范围来进行显示。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
autoscaleMargin:这个有一点难理解。flot自动计算min/max的范围的时候会加上一个值，从而防止有的点会放到图的边缘。这个属性只能</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在不设置max/min的时候才可以使用。如果设置了一个margin，flot会延长轴的结束点从而构成一个完整的坐标。默认</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的设置是x轴没有margin，y轴有0.02的margin。默认的设置已经可以满足大多数的使用了。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"transform"，"inverseTransform"：可以对原始的数据进行一些特殊的计算以后再进行绘制。比如：可以通过这种方法来绘制一些非线性</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的曲线。例如：<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xaxis: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; transform: function (v) { return Math.log(v); },<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inverseTransform: function (v) { return Math.exp(v); }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 同样的，想对Y轴做反转的话就可以：<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yaxis: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; transform: function (v) { return -v; },<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inverseTransform: function (v) { return -v; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Flot中的数据都是单调的，也就是说原始的数据是不能出现乱序的。inverseTransform就是transform的反向函数，通过显</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 示的数据可以得到原始数据，如果图表没有交互过程的话，这个属性可以不用设置。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 剩下的选项都是处理刻度的。如果不对刻度进行任何的设置的话，坐标生成函数会自动的计算刻度。算法会先估算刻度的个数，再计算出两个刻度之间的间隔大小，从而可以生成完整的刻度了。你可以给算法设置刻度的个数("ticks")，算法会根据原始数据的范围返回一个最接近你设置的刻度数的一个值，也就是说如果你设置了3,那么它返回5个坐标也是很正常的，因为算法认为5个刻度会更合适。如果不设置刻度的话，把"ticks"设置成0或者空数组就可以了。还可以通过设置"tickSize"来定义两个刻度之间的差值，如果设置成2,那么刻度就会是2,4,6.
 通过"minTickSize"可以设置两个刻度差值的最小值。对于时间刻度，我们可以设置数组来完成：[2, "month"]。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp;&nbsp; 最狠的方法还是直接忽略flot自带的算法，完全使用数组自己定义的刻度：<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ticks: [0, 1.2, 2.4]<br>
&nbsp;&nbsp;&nbsp;&nbsp; 下面的方法会更加的可定制化：<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ticks: [[0, "zero"], [1.2, "one mark"], [2.4, "two marks"]]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Flot还支持更牛X的可扩展性，就是可以调用一个函数来形成各个刻度的值。在函数中需要通过最小值，最大值和自己设定的一个间隔来计算出一个数组，作为各个刻度：<br>
&nbsp;&nbsp; function piTickGenerator(axis) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var res = [], i = Math.floor(axis.min / Math.PI);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var v = i * Math.PI;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res.push([v, i + "/u03c0"]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ++i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } while (v &lt; axis.max);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return res;<br>
&nbsp;&nbsp;&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp; 还可以设置"tickDecimals"来指定刻度显示的精度。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;&nbsp;&nbsp; 给"tickFormatter"定义也一个函数可以灵活的格式化刻度的显示，函数有两个参数，一个是刻度的值，一个是轴上的最大值和最小值，返回值一定要是string类型：<br>
function formatter(val, axis) {<br>
&nbsp;&nbsp;&nbsp; return val.toFixed(axis.tickDecimals);<br>
&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
对于一个轴对象，有min和max这两个属性，还有"tickDecimals"是坐标显示的精度，"tickSize"是两个刻度之间的差值，有了这么多的属性，就可以自己定制刻度的显示内容：<br>
function suffixFormatter(val, axis) {<br>
&nbsp;&nbsp;&nbsp; if (val &gt; 1000000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (val / 1000000).toFixed(axis.tickDecimals) + " MB";<br>
&nbsp;&nbsp;&nbsp; else if (val &gt; 1000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (val / 1000).toFixed(axis.tickDecimals) + " kB";<br>
&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return val.toFixed(axis.tickDecimals) + " B";<br>
&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"labelWidth"和"labelHeight"是定义刻度显示区域的。"reserveSpace"的意思是即使你不定义轴，flot也会使用这个属性把轴占用的空间给预留出来。当绘制单行多轴图表时与"labelWidth"和"labelHeight"一起使用会得到很多的效果。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"tickLength"定义坐标刻度的长度，null是默认设置，也就是一个很小的刻度，如果设置成0,在轴上就不会显示刻度。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"alignTicksWithAxis"：如果设置成其它轴的数字，Flot会在自动生成刻度的时候会与其它轴上的刻度对齐的。这样会更加的美观，尤其是图中有网格，并且有多具轴的时候，非常的实用。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
绘制多个轴：<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果你需要绘制多个轴的话，数据序列就要按照下面的格式给出，{ data: [...], yaxis: 2 }表明这个序列要使用第二个Y轴。这时要设置轴的显示形式的话，就不能直接使用xaxis/yaxis的选项了，而是要有两个数组：<br>
{<br>
&nbsp;&nbsp;&nbsp; xaxes: [ { position: "top" } ],<br>
&nbsp;&nbsp;&nbsp; yaxes: [ { }, { position: "right", min: 20 } ]<br>
&nbsp; }<br>
&nbsp; 如果所有的Y轴都想设置成相同的值的话，使用yaxis: { min: 0 }就可以了。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
时间类型的数据序列：</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
============================<br>
时间序列比数据序列就有一点难了。因为时间序列并不是按照10进制来排列的，所以Flot需要把时间转换成数值，再进行处理。Flot是通过javascript中的timestamps来支持时间序列的。timestamp是一个时间距1970年1月1日00:00:00的毫秒数，类似与Unix系统中使用的timestamps，只不过javascript的单位是毫秒，unix的意单位是秒。可以通过下面的来获取浏览器的timestamp：<br>
alert((new Date()).getTime())<br>
一般来说，大家都希望在网页上显示本地的时间，但是Flot只能把timestamp转换成UTC的时间来显示，所以唯一的方法就是获取本浏览当前的timestamp，和时区，再对timestamp的值进行计算，从而得到UTC时间与当前时间相等时的UTC timestamp。再把转换后的值提供给Flot来绘图。<br>
这时就可以用转换后的timestamp来构造原始的数据的，并把轴的类型定义成"time"，Flot就可以自动的计算刻度并格式化它们。当然了，也可以自己定义刻度，但是一定要使用数值型的参数，不能是对象类型。刻度的生成和格式化也可以通过轴的选项来自定义：<br>
&nbsp; minTickSize: array<br>
&nbsp; timeformat: null or format string<br>
&nbsp; monthNames: null or array of size 12 of strings<br>
&nbsp; twelveHourClock: boolean<br>
"timeformat"：时间的显示形式：<br>
xaxis: {<br>
&nbsp;&nbsp;&nbsp; mode: "time"<br>
&nbsp;&nbsp;&nbsp; timeformat: "%y/%m/%d"<br>
&nbsp; }<br>
&nbsp; 时间刻度就会显示成"2000/12/24"，具体的格式定义参考下面：<br>
&nbsp; %h: 小时<br>
&nbsp; %H: 小时 (左边补0)<br>
&nbsp; %M: 分钟 (左边补0)<br>
&nbsp; %S: 秒 (左边补0)<br>
&nbsp; %d: 日, 用 %0d 来左边补0<br>
&nbsp; %m: 月, 用 %0m 来左边补0<br>
&nbsp; %y: 年 (4位数)<br>
&nbsp; %b: 月的名字 (英文名字)<br>
&nbsp; %p: 12小时投制显示(am/pm), %h/%H&nbsp;<br>
&nbsp; %P: 12小时投制显示 (其中的AM/PM)</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
月份的名字是可以自定义的：<br>
monthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"]<br>
当"twelveHourClock"被设置成true时，时间就会用12时制来显示。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
时间的格式和月份的名字是被一个flot自带的格式化函数使用的，它会使用一个数据对象，一个格式字符串，从而返回格式化后的字符串。还可以直接调用$.plot.formatDate(date, formatstring, monthNames)或者调用自己完成的具有更强大功能的函数。<br>
<br>
你还可以通过函数来控制刻度的显示内容。下面的例子是把December 24格式化成24/12:<br>
&nbsp; tickFormatter: function (val, axis) {<br>
&nbsp;&nbsp;&nbsp; var d = new Date(val);<br>
&nbsp;&nbsp;&nbsp; return d.getUTCDate() + "/" + (d.getUTCMonth() + 1);<br>
&nbsp; }<br>
对于时间模式的"tickSize"是有一点特别的"minTickSize"，需要使用数组来定义，格式为"[value, unit]"。其中，unit只能是"second", "minute", "hour", "day", "month" and "year"，所以就可以这样来设置了：<br>
&nbsp; minTickSize: [1, "month"]<br>
这样就可以把两个刻度之间的差值设置成最小一个月了，如果tickSize是[2, "day"]，那么刻度的差值就是固定了两天了。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
自定义数据序列<br>
=================<br>
&nbsp; series: {<br>
&nbsp;&nbsp;&nbsp; lines, points, bars: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; show: boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lineWidth: number<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fill: boolean or number<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fillColor: null or color/gradient<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; points: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radius: number<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; symbol: "circle" or function<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; bars: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; barWidth: number<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; align: "left" or "center"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; horizontal: boolean<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; lines: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; steps: boolean<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; shadowSize: number<br>
&nbsp; }<br>
&nbsp;&nbsp;<br>
&nbsp; colors: [ color1, color2, ... ]<br>
"series: {}"的选项会拷贝到所有的数据序列中。如果想设置所有的数据序列显示属性的话，就可以在这个全局选项中设置，如果只想设置某一个数据序列的显示的话，就可以在对应的序列中进行设置。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"lines", "points"和"bars"这三个属性的设置是很重要的，因为会直接影响到点，线和柱状图的显示方式。如果所有的属性都没有设置的话，flot会有一个默认的设置。当然也可以单独的设置一个或者多个属性，flot会根据你的设置来绘制图表：<br>
&nbsp; var options = {<br>
&nbsp;&nbsp;&nbsp; series: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lines: { show: true, fill: true, fillColor: "rgba(255, 255, 255, 0.8)" },<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; points: { show: true, fill: false }<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; };<br>
<br>
"lineWidth"设置线的宽度，单位是pixels。你还可以把这个值设置成0,从而会把线删除，当然阴影也不会绘制。<br>
"fill"是控制填充的，当线足够宽的话，线就变成了图形，所以就有必要确定是否要填充了。 "fillColor"确定填充的颜色，如果这个值不设置的话，flot会使用数据序列中定义的颜色来填充。第4个值是设置填充的透明度，取值从0(完全透明)到1(不透明).</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
对于bar类型的柱状图而言，fillColor可以是阶梯形式的，下面会有详细的介绍。"barWidth"是柱的宽度，单位就是对应轴的数据类型。当轴是时间类型的话，那么单位就是毫秒，那么24 * 60 * 60 * 1000的宽度就是一天。"align"是柱的对齐方式，左对齐(默认)或者居中。当"horizontal"被设置以后，柱状图就会水平绘制，也就是柱与x轴是平行的。如果之前已经绘制过与y轴平行的柱子的话，还要交换一下坐标轴。<br>
<br>
对于线而言，"steps"用来设置两个相邻点之间是使用直线连接还是使用台阶线连接。如果使用台阶线的，flot会自动的添加一些点来实现这个功能。<br>
<br>
对于绘制的点，可以设置点的半径和符号。目前flot只支持圆形的符号，可以使用其它的插件来使用其它的符号，也可以使用自己定义的函数：<br>
&nbsp; function cross(ctx, x, y, radius, shadow) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var size = radius * Math.sqrt(Math.PI) / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctx.moveTo(x - size, y - size);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctx.lineTo(x + size, y + size);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctx.moveTo(x - size, y + size);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctx.lineTo(x + size, y - size);<br>
&nbsp; }<br>
输入的参数是绘制的上下文，绘制点x和y轴的坐标，radius设置绘制点的半径，也可以设置是否显示阴影。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
"shadowSize"用来设置阴影的大小，单位是pixels，设置成0的话就可以删除阴影。<br>
"colors"数组是用来设置在绘图过程中各条线使用的颜色的默认值：<br>
&nbsp; colors: ["#d18b2c", "#dba255", "#919733"]<br>
如果数据序列的数量比定义的颜色数量多的话，flot还会生成一些新的颜色用于绘制图表。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
自定义网格<br>
=====================<br>
&nbsp; grid: {<br>
&nbsp;&nbsp;&nbsp; show: boolean<br>
&nbsp;&nbsp;&nbsp; aboveData: boolean<br>
&nbsp;&nbsp;&nbsp; color: color<br>
&nbsp;&nbsp;&nbsp; backgroundColor: color/gradient or null<br>
&nbsp;&nbsp;&nbsp; labelMargin: number<br>
&nbsp;&nbsp;&nbsp; axisMargin: number<br>
&nbsp;&nbsp;&nbsp; markings: array of markings or (fn: axes -&gt; array of markings)<br>
&nbsp;&nbsp;&nbsp; borderWidth: number<br>
&nbsp;&nbsp;&nbsp; borderColor: color or null<br>
&nbsp;&nbsp;&nbsp; minBorderMargin: number or null<br>
&nbsp;&nbsp;&nbsp; clickable: boolean<br>
&nbsp;&nbsp;&nbsp; hoverable: boolean<br>
&nbsp;&nbsp;&nbsp; autoHighlight: boolean<br>
&nbsp;&nbsp;&nbsp; mouseActiveRadius: number<br>
&nbsp; }<br>
<br>
网格可以看做是轴上的刻度不断的延长而形成的。网格大多数的属性都是在轴中定义的，但是也有些属性是网格独自定义的，"color"用来定义颜色，"backgroundColor"用来定义网格中的背景颜色。如果设置成null的话，就说明grid的背景是透明的，当然也可以设置成梯度的。<br>
<br>
当然也把show设置成false，而不显示所有的刻度标签和网格。"aboveData"用来确定网格与数据的层次关系。<br>
<br>
"labelMargin"是刻度标签与轴之间的像素值，"axisMargin"是两个轴之间的像素值，当有两个轴相邻的时候使用的。你可以使用CSS来定义刻度标签的显示格式，需要定义一个"tickLabel"的CSS类。<br>
<br>
"borderWidth"是图表的边界宽度值。设置成0就没有边界。"borderColor"是定义边界的颜色，"minBorderMargin"控制边界的最小空白区域。<br>
<br>
"markings"用来绘制图表中的简单直线和背景上的矩形区域。可以使用数组来设置要绘制的线或者区域{ xaxis: { from, to }, yaxis: { from, to } }。或者是一个可以返回这种数组的函数，参数是轴的数据作为一个对象。<br>
<br>
还可以设置矩形区域的颜色：<br>
&nbsp; markings: [ { xaxis: { from: 0, to: 2 }, yaxis: { from: 10, to: 10 }, color: "#bb0000" }, ... ]<br>
<br>
如果省略其中的一个值的话，那么flot就会把省略值的范围设置成对应轴的所有取值范围。{ xaxis: {<br>
from: 0, to: 2 } }就会绘制一个x轴从0到2, Y轴全部的矩形。markings: [ { yaxis: { from: 1, to: 1 } }, ... ]就会绘制一条与x轴平行的直线。可以通过设置"lineWidth"改变线的宽度。<br>
<br>
使用函数来设置的话可以这样来实现：<br>
&nbsp; markings: function (axes) {<br>
&nbsp;&nbsp;&nbsp; var markings = [];<br>
&nbsp;&nbsp;&nbsp; for (var x = Math.floor(axes.xaxis.min); x &lt; axes.xaxis.max; x += 2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; markings.push({ xaxis: { from: x, to: x + 1 } });<br>
&nbsp;&nbsp;&nbsp; return markings;<br>
&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
把"clickable"设置成true， 图表就会监听鼠标的click动作，并生成"plotclick"事件，参数是点击的坐标和点击距离最近的数值，位置的坐标可以是图表中对应的值，也可以是全局页面的坐标。<br>
<br>
同样的，如果把"hoverable"设置成true的话，图表就会监听鼠标的移动事件，并生成"plothover"，参数与"plotclick"是相同的。如果"autoHighlight"设置成true，鼠标附近的元素就会被高亮显示。当然你也可以把"autoHighlight"设置成false，从而可以使用highlight/unhighlight函数来进行设置。<br>
<br>
"plotclick" 和 "plothover"的处理函数可以这样完成：<br>
&nbsp;&nbsp;&nbsp; $.plot($("#placeholder"), [ d ], { grid: { clickable: true } });<br>
<br>
&nbsp;&nbsp;&nbsp; $("#placeholder").bind("plotclick", function (event, pos, item) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert("You clicked at " + pos.x + ", " + pos.y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // axis coordinates for other axes, if present, are in pos.x2, pos.x3, ...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // if you need global screen coordinates, they are pos.pageX, pos.pageY<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (item) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; highlight(item.series, item.datapoint);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert("You clicked a point!");<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; });<br>
其中item对象的格式是<br>
&nbsp; item: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; datapoint: the point, e.g. [0, 2]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataIndex: the index of the point in the data array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; series: the series object<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seriesIndex: the index of the series<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pageX, pageY: the global screen coordinates of the point<br>
&nbsp; }<br>
如果设置的数据是这样子的：<br>
&nbsp; $.plot($("#placeholder"), [ { label: "Foo", data: [[0, 10], [7, 3]] } ], ...);<br>
而且鼠标与（7, 3）这个节点离的非常近，"datapoint" 是 [7, 3],"dataIndex" 会是1。"series"就是一个序列的对象，包含的信息是"Foo" (series.label)和颜色(series.color),seriesIndex的值是0.</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
如果使用上面的方法来显示一些信息的话，那么就需要监听"mouseout"事件。"mouseActiveRadius"用来定义鼠标做用的范围。如果有多个数据点在这个范围中的话，Flot只会选择最接近的那一个。对柱状图而言，最高的那个柱子会被选中。<br>
<br>
如果不想有交互的话，就可以"hoverable" 和 "clickable" 设置成false：{ data: [...], label: "Foo", clickable: false }。<br>
<br>
梯度颜色的定义<br>
===================<br>
定义的方法： { colors: [ color1, color2, ... ] }<br>
如果想让网格的背景从黑色到灰色的话：<br>
&nbsp; grid: {<br>
&nbsp;&nbsp;&nbsp; backgroundColor: { colors: ["#000", "#999"] }<br>
&nbsp; }</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
对数据序列，可以设置颜色的透明度和亮度：<br>
&nbsp; { colors: [{ opacity: 0.8 }, { brightness: 0.6, opacity: 0.8 } ] }<br>
第一个只有透明度，第二个还包含了亮度。对于柱形图来说，下面的例子可以让柱子逐渐的消失：<br>
&nbsp; bars: {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; show: true,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lineWidth: 0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fill: true,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fillColor: { colors: [ { opacity: 0.8 }, { opacity: 0.1 } ] }<br>
&nbsp; }<br>
<br>
Flot目前只能支持垂直方向上从上到下的渐变，因为IE只支持这个模式。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
Plot方法<br>
---------------<br>
由plot函数生成的对象提供了可调用的方法<br>
&nbsp; - highlight(series, datapoint)<br>
用来高亮显示一个数据点。你可以通过"plotclick"事件获取对象，或者使用highlight(1, 3)来高亮显示第2个数据序列中的第4个数据点。<br>
<br>
&nbsp; - unhighlight(series, datapoint) or unhighlight()<br>
删除高亮显示，如果有参数的话，就是删除指定高亮的点，如果没有参数的话，plot就会删除图表中所有的高亮显示。<br>
<br>
&nbsp; - setData(data)<br>
用来重新设置数据。但是轴的取值范围，刻度坐标，标签是不会重新绘制的，可以调用draw()让plot绘制新的曲线，但是其它部分不会改变。用这个函数可以变速的更新一个图表中的曲线，前提条件是所有值的取值范围是没有改变的。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp; - setupGrid()<br>
重新计算轴的取值范围，并设置刻度和标签。如果调用过setData的话，就可以使用这个函数重新绘制有影响的部分。<br>
&nbsp; - draw()<br>
重新绘制图表中的显示曲线部分。<br>
&nbsp; - triggerRedrawOverlay()<br>
在可绘制区域上更新可交互的部分，如选择区域和点的高亮。当要自己编写插件时是非常有用的。图表并不会马上重新绘制，而是可以设置一个定时器来获取多次的重给事件。<br>
&nbsp; - width()/height()<br>
获取可绘制区域的宽度和高度。也就是网格中的区域。<br>
&nbsp; - offset()<br>
返回网格中可绘图的区域相对于整个文档的偏移，当计算鼠标所在的位置时很重要。把event.pageX/Y减去这个偏移就是在绘图区域中的坐标。<br>
&nbsp; - pointOffset({ x: xpos, y: ypos })<br>
(x,y)这个数据点在包含绘图div窗口中的偏移。<br>
&nbsp; - resize()<br>
如果绘图窗口的大小发生改变，就可以调用这个函数来重新绘图。<br>
&nbsp; - shutdown()<br>
关闭已经注册的所有事件的处理函数。<br>
<br>
还会一些其它的函数，但是需要你了解Flot内部的代码流程。如果你修改了获取到对象中的属性的话，那么你就修改了Flot内部使用的对象，Flot无法及时的更新你修改的内容，还有可能会影响绘图功能，所以使用的时候一定要小心。具体的使用方法可以参考原版的文档。<br>
&nbsp; - getData()<br>
&nbsp; - getAxes()<br>
&nbsp; - getPlaceholder()<br>
&nbsp; - getCanvas()<br>
&nbsp; - getPlotOffset()<br>
&nbsp; - getOptions()</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
Hooks（钩子函数）<br>
======================<br>
Plot对象在绘制过程中可以添加许多的钩子函数，从而添加一些方法，在方法还可以访问Flot中的内部数据。<br>
<br>
下面就是Flot处理流程的概要：<br>
1. 插件的初始化，处理各个选项<br>
2. 构造绘图区域<br>
3. 设置各类数据：处理用户录入的数据，计算显示用的颜色，把原始数据转化成内部格式，规格化数据，查看最大最小值用来设置轴的取值范围。<br>
4. 网格的设置：计算轴的空间，刻度，刻度的标签。<br>
5. 绘图： 绘制网格，按照顺序绘图<br>
6. 设置事件处理的自定义函数<br>
7. 答复事件。<br>
8. 关闭：一般都是发生在整个图表被重写的时候发生。<br>
<br>
钩子函数一个简单的函数，并放在了一个特定的数组当中。你可以使用"hooks"来添加钩子函数，当绘图完成以后，钩子函数仍然是起作用的，因为它的定义已经存在于plot的对象中了。</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp;</p>
<p style="font-family:&#39;WenQuanYi Micro Hei Mono&#39;,&#39;WenQuanYi Micro Hei&#39;,&#39;Microsoft Yahei Mono&#39;,&#39;Microsoft Yahei&#39;,sans-serif; color:rgb(51,51,51); font-size:14px; line-height:26px; text-align:left">
&nbsp; // define a simple draw hook<br>
&nbsp; function hellohook(plot, canvascontext) { alert("hello!"); };<br>
<br>
&nbsp; // pass it in, in an array since we might want to specify several<br>
&nbsp; var plot = $.plot(placeholder, data, { hooks: { draw: [hellohook] } });<br>
<br>
&nbsp; // we can now find it again in plot.hooks.draw[0] unless a plugin<br>
&nbsp; // has added other hooks<br>
&nbsp;&nbsp;<br>
下面会列出所有可以设置钩子的地方。所有的钩子都会把plot对象作为第一个参数。你可以在在Flot绑定的插件中看使用的例子。<br>
&nbsp;- processOptions&nbsp; [phase 1]<br>
<br>
&nbsp;&nbsp; function(plot, options)<br>
当Flot处理合并完合选项后调用。当你不想仅仅简单的合并默认的选项时就可以使用。插件也可以通过这个函数来打开或者关闭与自己相关的选项。<br>
<br>
&nbsp;- processRawData&nbsp; [phase 3]<br>
<br>
&nbsp;&nbsp; function(plot, series, data, datapoints)<br>
在Flot复制并且格式化原始数据之前调用。如果函数中使用格式化的数据点设置了datapoints.points并把datapoints.pointsize设置成数据点的数量，那么Flot就会不会对这个数据序列进行任何的处理。<br>
<br>
一般来说，你可能会设置datapoints.format，用来定义数据值的格式化方法和轴取值的范围。默认的格式化数组是这样子的：<br>
&nbsp;&nbsp;&nbsp;&nbsp; [<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { x: true, number: true, required: true },<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { y: true, number: true, required: true }<br>
&nbsp;&nbsp;&nbsp;&nbsp; ]<br>
第一个对象的含义是对于第一个坐标轴，需要计算x轴的取值范围，必须是数字类型，而且是必选的。如果是空的，或者无法转换成数字类型的话，所有的点都会被初始化成0.当然了你还可以指定"defaultValue"，如果没有指定类型的话，Flot就会使用这里定义的选项值。<br>
<br>
&nbsp;- processDatapoints&nbsp; [phase 3]<br>
<br>
&nbsp;&nbsp; function(plot, series, datapoints)<br>
在格式化完原始数据之后，查找最大值和最小值之前。这个钩子函数是用来对数据进行转换的。"datapoints"包含了两个成员，其中datapoints.points是格式化后的一维数组，datapoints.pointsize是所有数据点的个数。这里给出一个简单的转换，把所有的点的y坐标都乘以2：<br>
&nbsp;&nbsp;&nbsp;&nbsp; function multiply(plot, series, datapoints) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var points = datapoints.points, ps = datapoints.pointsize;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (var i = 0; i &lt; points.length; i += ps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; points[i + 1] *= 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
一定要保证datapoints中数据的正确性，因为Flot不会再为这些数据进行检查的。<br>
<br>
&nbsp;- drawSeries&nbsp; [phase 5]<br>
<br>
&nbsp;&nbsp; function(plot, canvascontext, series)<br>
只用来绘制一个数据序列，在循环的绘制每一个数据序列之前调用。<br>
<br>
&nbsp;- draw&nbsp; [phase 5]<br>
<br>
&nbsp;&nbsp; function(plot, canvascontext)<br>
在网格绘制完成以后被调用。可以阅读原代码来学习这个方法的使用。<br>
<br>
&nbsp;- bindEvents&nbsp; [phase 6]<br>
<br>
&nbsp;&nbsp; function(plot, eventHolder)<br>
在Flot配置它的事件处理函数之后调用。可以给eventHolder设置需要的事件处理函数。例如：<br>
&nbsp;&nbsp;&nbsp;&nbsp; function (plot, eventHolder) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eventHolder.mousedown(function (e) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert("You pressed the mouse at " + e.pageX + " " + e.pageY);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;- drawOverlay&nbsp; [phase 7]<br>
<br>
&nbsp;&nbsp; function (plot, canvascontext)<br>
用来绘制可交互区域的。<br>
<br>
&nbsp;- shutdown&nbsp; [phase 8]<br>
<br>
&nbsp;&nbsp; function (plot, eventHolder)<br>
当plot.shutdown()时被调用，一般只有整个绘图被一个新的绘图完全覆盖时才需要。</p>

</div>
<div class="share_buttons" id="sharePanel"><span>分享到：</span> <a name="sina" class="share_sina" title="分享到新浪微博"></a><a name="qq" class="share_qq" title="分享到腾讯微博"></a></div>

<div class="article_next_prev">
        <li class="prev_article">
            <span>上一篇：</span><a href="http://blog.csdn.net/shirley0214/article/details/6943189">JsonConvert  ASP.NET Json的序列化与反序列化</a></li>
        <li class="next_article">
            <span>下一篇：</span><a href="http://blog.csdn.net/shirley0214/article/details/6945605">asp.net 使用owc组件画图(折线图 面积图 柱状图等)</a></li>
</div>


</div>
<div id="ad_cen"><iframe id="ad_frm_0" frameborder="0" scrolling="no" style="border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; overflow-x: hidden; overflow-y: hidden; width: 1093px; height: 95px; " src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ad(1).htm"></iframe></div>
<script type="text/javascript">
    new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"><br>&nbsp;&nbsp;暂无评论<br><br><div class="clear"></div></div>
<div id="comment_bar"></div>
<div id="comment_form"><a name="commentbox"></a><a name="reply"></a><a name="quote"></a><form action="http://blog.csdn.net/shirley0214/comment/submit?id=6945002" method="post"><div class="commentform"><div class="panel_head">发表评论</div><ul><li class="left">用 户 名：</li><li class="right">runtool</li></ul><ul><li class="left">评论内容：</li><li class="right" style="position:relative;"><div id="ubbtools"><a href="http://blog.csdn.net/shirley0214/article/details/6945002#insertcode" code="code"><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/code.gif" border="0" alt="插入代码" title="插入代码"></a></div><div id="lang_list" style="display:none; position:absolute;top:25px; left:0px;"><a href="http://blog.csdn.net/shirley0214/article/details/6945002#html">HTML/XML</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#javascript">JavaScript</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#css">CSS</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#php">PHP</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#csharp">C#</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#cpp">C++</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#java">Java</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#python">Python</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#ruby">Ruby</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#vb">Visual Basic</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#delphi">Delphi</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#sql">SQL</a><a href="http://blog.csdn.net/shirley0214/article/details/6945002#plain">其它</a></div><textarea class="comment_content" name="comment_content" id="comment_content" style="width: 400px; height: 200px;"></textarea></li></ul><ul><input type="hidden" id="comment_replyId" name="comment_replyId"><input type="hidden" id="comment_userId" name="comment_userId" value="521203"><input type="hidden" id="commentId" name="commentId" value=""><input type="submit" class="comment_btn" value="提交">&nbsp;&nbsp;<span id="tip_comment" style="color: Red; display: none;"></span></ul></div></form></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '6945002';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/comment.js"></script>
<div id="ad_bot"><iframe id="ad_frm_1" frameborder="0" scrolling="no" style="border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; overflow-x: hidden; overflow-y: hidden; width: 1093px; height: 170px; " src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ad(2).htm"></iframe></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>



<div class="clear"></div>
</div>
</div>
<div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
    <ul class="panel_head"><span>个人资料</span></ul>
    <ul class="panel_body profile">
        <div id="blog_userface">
            <a href="http://blog.csdn.net/shirley0214" title="我的博客主页">
            <img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/1_shirley0214.jpg" style="max-width:90%">
            </a>
            <br>
            <span>shirley0214</span>
        </div>
        <div id="blog_medal">
        <div id="bms_box"></div></div>
        <ul id="blog_rank">
            <li>访问：<span>768次</span></li>
            <li>积分：<span>35分</span></li>
            <li>排名：<span>千里之外</span></li>
        </ul>
        <ul id="blog_statistics">
            <li>原创：<span>2篇</span></li>
            <li>转载：<span>4篇</span></li>
            <li>译文：<span>0篇</span></li>
            <li>评论：<span>3条</span></li>
        </ul>
    </ul>
</div><div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>文章分类</span></ul>
    <ul class="panel_body">
        <li>
        <a href="http://blog.csdn.net/shirley0214/article/category/923298">序列化与反序列化</a><span>(1)</span>
        
        </li>
        <li>
        <a href="http://blog.csdn.net/shirley0214/article/category/924804">web 前端 jQuery Flot控件</a><span>(3)</span>
        
        </li>
        <li>
        <a href="http://blog.csdn.net/shirley0214/article/category/930193">jQuery</a><span>(1)</span>
        
        </li>
    </ul>
</div><div id="panel_Archive" class="panel">
    <ul class="panel_head"><span>文章存档</span></ul>
    <ul class="panel_body">
        <div id="archive_list">
        <!--归档统计-->
        <li><a href="http://blog.csdn.net/shirley0214/article/month/2011/11">2011年11月</a>(6)</li>
        </div>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>阅读排行</span></ul>
    <ul class="panel_body">
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6943189" title="JsonConvert  ASP.NET Json的序列化与反序列化">JsonConvert  ASP.NET...</a> (279)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6950795" title="flot中文说明文档 简版">flot中文说明文档 简版</a> (141)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6946545" title="flot API">flot API</a> (112)
        </li>
        <li>
            <a href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET.htm" title="flot 说明文档-翻译">flot 说明文档-翻译</a> (58)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6945605" title="asp.net 使用owc组件画图(折线图 面积图 柱状图等)">asp.net 使用owc组件画图(折线...</a> (31)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6975476" title="jQuery插件开发全解析">jQuery插件开发全解析</a> (27)
        </li>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>评论排行</span></ul>
    <ul class="panel_body">
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6943189" title="JsonConvert  ASP.NET Json的序列化与反序列化">JsonConvert  ASP.NET...</a> (3)
        </li>
        <li>
            <a href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET.htm" title="flot 说明文档-翻译">flot 说明文档-翻译</a> (0)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6945605" title="asp.net 使用owc组件画图(折线图 面积图 柱状图等)">asp.net 使用owc组件画图(折线...</a> (0)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6946545" title="flot API">flot API</a> (0)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6950795" title="flot中文说明文档 简版">flot中文说明文档 简版</a> (0)
        </li>
        <li>
            <a href="http://blog.csdn.net/shirley0214/article/details/6975476" title="jQuery插件开发全解析">jQuery插件开发全解析</a> (0)
        </li>
    </ul>
</div>
<div id="homepageArticles" class="panel">
    <ul class="panel_head"><span>推荐文章</span></ul>
    <ul class="panel_body" id="ad_commend">
    <iframe id="ad_frm_2" frameborder="0" scrolling="no" style="border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; overflow-x: hidden; overflow-y: hidden; width: 194px; height: 224px; " src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ad.htm"></iframe></ul>
</div>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ad.js"></script>
<script type="text/javascript">
    new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body">
    <li>
    <a href="http://blog.csdn.net/shirley0214/article/details/6943189#comments">JsonConvert  ASP.NET Json的序列化与反序列化</a>
    <p style="margin:0px;">telankes2000:
不能实现返回匿名类 毫无意义
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/shirley0214/article/details/6943189#comments">JsonConvert  ASP.NET Json的序列化与反序列化</a>
    <p style="margin:0px;">huai121:
简单明了
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/shirley0214/article/details/6943189#comments">JsonConvert  ASP.NET Json的序列化与反序列化</a>
    <p style="margin:0px;">wqh_2011:
嗯，有帮助
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/shCore-src.js"></script>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/ZeroClipboard.js"></script>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/article_code.js"></script>

<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/show.js"></script>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/showblogmedal.ashx"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/pv.aspx" border="0" width="0" height="0">
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/counter.js"></script><script type="text/javascript" charset="UTF-8" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/msg.popup.js"></script><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/visitlog.php" width="1" height="1" border="0" alt=""><iframe id="myframe" name="myframe" frameborder="no" scrolling="no" width="0" height="0" border="0" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/dd333.htm"></iframe>
<script type="text/javascript" src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/publib_footer.js"></script><link rel="stylesheet" type="text/css" href="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/pub_footerstyle.css"><div class="pub_footerall"><dl><dt></dt> <dd><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a>|<a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a>|<a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a>|<a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a>|<a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a>|<a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a>|<a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a>|<a href="mailto:webmaster@csdn.net">问题报告</a></dd><dd>北京创新乐知信息技术有限公司 版权所有,&nbsp;京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</dd><dd>世纪乐知(北京)网络技术有限公司 提供技术支持</dd><dd>江苏乐知网络技术有限公司 提供商务支持</dd><dd><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/pic_email.gif" alt="" title=""> Email:webmaster@csdn.net</dd><dd>Copyright © 1999-2011, CSDN.NET, All Rights Reserved</dd><dd><a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./flot 说明文档-翻译 - shirley0214的专栏 - 博客频道 - CSDN.NET_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div>


</div>

</body></html>